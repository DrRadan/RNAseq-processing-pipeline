#!/usr/bin/perl

use strict;
use Data::Dumper;
use Getopt::Long;


#######################################################################################################################################
# Myseq generates a separate index read fastq file, so we need to manually copy them into each R1 and R2 fastq file
# This script is to copy index sequence in XX_INDEX.fastq file into read tags in XXX_R1 and R2 fastq files generated by MySeq option
#######################################################################################################################################

my $fastq1;     # input R1 fastq file
#my $fastq2;     # input R2 fastq file
my $index;      # input index fastq file

GetOptions(
	   'f1=s'=>\$fastq1,
#	   'f2=s'=>\$fastq2,
	   'index=s'=>\$index,
 );


##############################################################
# Build a hash of arrays for Index sequence file info (fastq)
# @READ_ID 1:N:0:0
# XXXXXX
# +
# ??????
##############################################################
my %index=(); # index hash #key = ID, value = index seq

open(IN, "<$index") or die("Can't find the index fastq file!: $!");
while(<IN>){
    chomp;
    if($_=~/^\@/){   # if this line is the READ_ID line
	my @tmp=split(' ',$_);
	chomp($index{$tmp[0]}=<IN>); # actual 6 nts index
	<IN>;                                # skip 3rd line
	<IN>;                                # skip 4th line
    }
#    print Dumper\%index;die;
} 
close IN;

##################################################################################
# READ Fastq files and copy the INDEX info into the first line of each fastq info
# if no index was sequenced, discard a read
##################################################################################
open(R1, "<$fastq1") or die("No such a fastq file!");
#open(R2, "<$fastq2") or die("No such a fastq file!");

my @tmp_fname1=split('\.',$fastq1);
#my @tmp_fname2=split('\.',$fastq2);
my $out1=$tmp_fname1[0]."m.fastq"; # output file name1
#my $out2=$tmp_fname2[0]."m.fastq"; # output file name2
open OUT1, ">$out1";
#open OUT2, ">$out2";

while(<R1>){
    chomp;
    if($_=~/\@M/){
	my @tmp=split(' ',$_);
	my $line1=$tmp[0]." 1:N:0:".$index{$tmp[0]};
	my $line2=<R1>;
	my $line3=<R1>;
	my $line4=<R1>;
	print OUT1 "$line1\n$line2$line3$line4";
    }
}
close R1;close OUT1;

#while(<R2>){
#   chomp;
#  if($_=~/\@M/){
#	my @tmp=split(' ',$_);
#	my $line1=$tmp[0]." 2:N:0:".$index{$tmp[0]};
#	my $line2=<R2>;
#	my $line3=<R2>;
#	my $line4=<R2>;
#	print OUT2 "$line1\n$line2$line3$line4";
#   }
#}

#close R2;close OUT2;



exit 0;
    
